{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"run","provenance":[],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"colab_type":"text","id":"QMMqmdiYMkvi"},"source":["## Faster GPUs\n","With Colab Pro you have priority access to our fastest GPUs. For example, you may get a T4 or P100 GPU at times when most users of standard Colab receive a slower K80 GPU. You can see what GPU you've been assigned at any time by executing the following cell."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"23TOba33L4qf","outputId":"59ae1e72-4759-4bbc-90c1-70b23ad9d9c7","executionInfo":{"status":"ok","timestamp":1584062437602,"user_tz":-60,"elapsed":46782,"user":{"displayName":"Kyuubi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8iA1SO5WVlbY-r-p7wqCuleXLVpOuYym6tOQ3=s64","userId":"09699004457365288649"}},"colab":{"base_uri":"https://localhost:8080/","height":312}},"source":["gpu_info = !nvidia-smi\n","gpu_info = '\\n'.join(gpu_info)\n","if gpu_info.find('failed') >= 0:\n","  print('Select the Runtime → \"Change runtime type\" menu to enable a GPU accelerator, ')\n","  print('and then re-execute this cell.')\n","else:\n","  print(gpu_info)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Fri Mar 13 01:19:30 2020       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 440.59       Driver Version: 418.67       CUDA Version: 10.1     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|===============================+======================+======================|\n","|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   42C    P0    34W / 250W |      0MiB / 16280MiB |      0%      Default |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                       GPU Memory |\n","|  GPU       PID   Type   Process name                             Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"65MSuHKqNeBZ"},"source":["## More memory\n","With Colab Pro you have the option to access high-memory VMs when they are available. To set your notebook preference to use a high-memory runtime, select the Runtime → 'Change runtime type' menu, and then select High-RAM in the Runtime shape dropdown.\n","\n","You can see how much memory you have available at any time by running the following code."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"V1G82GuO-tez","outputId":"248773d7-56a8-43b9-ee8e-379010e914b3","executionInfo":{"status":"ok","timestamp":1583661749373,"user_tz":-60,"elapsed":825,"user":{"displayName":"Kyuubi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8iA1SO5WVlbY-r-p7wqCuleXLVpOuYym6tOQ3=s64","userId":"09699004457365288649"}},"colab":{"base_uri":"https://localhost:8080/","height":104}},"source":["from psutil import virtual_memory\n","ram_gb = virtual_memory().total / 1e9\n","print('Your runtime has {:.1f} gigabytes of available RAM\\n'.format(ram_gb))\n","\n","if ram_gb < 20:\n","  print('To enable a high-RAM runtime, select the Runtime → \"Change runtime type\"')\n","  print('menu, and then select High-RAM in the Runtime shape dropdown. Then, ')\n","  print('re-execute this cell.')\n","else:\n","  print('You are using a high-RAM runtime!')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Your runtime has 13.7 gigabytes of available RAM\n","\n","To enable a high-RAM runtime, select the Runtime → \"Change runtime type\"\n","menu, and then select High-RAM in the Runtime shape dropdown. Then, \n","re-execute this cell.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"s-R1p53qA5X6","colab_type":"text"},"source":["### Fix Error Transport point not connected\n","1. run the commands below\n","2. or Runtime->Manage session, terminate for the session."]},{"cell_type":"code","metadata":{"id":"o9NE7XN2BCOq","colab_type":"code","colab":{}},"source":["from google.colab import drive\n","\n","!fusermount -u drive\n","!google-drive-ocamlfuse drive"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UJKHZKU4z8qn","colab_type":"text"},"source":["## Load Google Drive"]},{"cell_type":"code","metadata":{"id":"NZx9cUXNzyvK","colab_type":"code","outputId":"2bf0894e-7d06-4557-e08a-07d704bc2da0","executionInfo":{"status":"ok","timestamp":1584183692907,"user_tz":-60,"elapsed":93132,"user":{"displayName":"Kyuubi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8iA1SO5WVlbY-r-p7wqCuleXLVpOuYym6tOQ3=s64","userId":"09699004457365288649"}},"colab":{"base_uri":"https://localhost:8080/","height":141}},"source":["from google.colab import drive\n","drive.mount('/gdrive')\n","\n","%cd /gdrive/My\\ Drive/TasNet/"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /gdrive\n","/gdrive/My Drive/TasNet\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"frIOUrnV97d8","colab_type":"text"},"source":["## Remount Google Drive\n","- needed when some changes happen on Drive and we want to see this changes here."]},{"cell_type":"code","metadata":{"id":"zP-TMK3R-CN_","colab_type":"code","colab":{}},"source":["from importlib import reload  # Python 3.4+ only.\n","drive = reload(drive)         #update google drive disk data here\n","\n","drive.mount('/gdrive', force_remount=True)\n","\n","%cd /gdrive/My\\ Drive/TasNet/"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sU91zxFrz-1j","colab_type":"text"},"source":["## Train network\n"]},{"cell_type":"code","metadata":{"id":"amKl8EdRz_KW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"ae1d8271-9aee-40fb-a48b-23dbab222745","executionInfo":{"status":"ok","timestamp":1584176330510,"user_tz":-60,"elapsed":19603251,"user":{"displayName":"Kyuubi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8iA1SO5WVlbY-r-p7wqCuleXLVpOuYym6tOQ3=s64","userId":"09699004457365288649"}}},"source":["!python3 train.py --epochs 10 --X 7 --R 3   \\\n","--basepath=\"/gdrive/My Drive/FIT/dataset/\"         \\\n","--dst-dir=\"/gdrive/My Drive/FIT/training_results/\"   \\\n","--minibatch-size 30    #2>stderr.log"],"execution_count":21,"outputs":[{"output_type":"stream","text":["Version 13\n","Namespace(BASE_DATA_PATH='/gdrive/My Drive/FIT/dataset/', DEBUG=False, R=3, X=7, checkpoint_file=None, disable_training=False, disable_validation=False, dst_dir='/gdrive/My Drive/FIT/training_results/', epochs=10, learning_rate=0.0001, minibatch_size=30, padding=10, print_loss=False, stride=20)\n","Cuda is available!\n","Trainign directory:  /gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/\n","Epoch  0  started at  2020-03-14 03:32:36.245077\n",">> __len__\n","__len__: 1 < 20000  Returns:  54936\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  0  finished - processed in  0:14:19.064895 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  44660\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  2:45:11.125283\n","\n","-7.609242183907119   42\n","Epoch  1  started at  2020-03-14 06:32:06.611977\n",">> __len__\n","__len__: 1 < 20000  Returns:  44486\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  1  finished - processed in  0:14:31.929418 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  38836\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  0:01:36.950223\n","\n","-10.008364783349544   -7.609242183907119\n","Epoch  2  started at  2020-03-14 06:48:15.662200\n",">> __len__\n","__len__: 1 < 20000  Returns:  41915\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  2  finished - processed in  0:14:34.300784 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  17120\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  0:01:39.251209\n","\n","-11.667702653055716   -10.008364783349544\n","Epoch  3  started at  2020-03-14 07:04:29.365989\n",">> __len__\n","__len__: 1 < 20000  Returns:  41239\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  3  finished - processed in  0:14:39.793921 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  40176\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  0:01:39.886273\n","\n","-12.704352995295755   -11.667702653055716\n","Epoch  4  started at  2020-03-14 07:20:49.229586\n",">> __len__\n","__len__: 1 < 20000  Returns:  46926\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  4  finished - processed in  0:14:34.248504 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  38550\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  0:01:38.037895\n","\n","-13.539396303028415   -12.704352995295755\n","Epoch  5  started at  2020-03-14 07:37:01.666301\n",">> __len__\n","__len__: 1 < 20000  Returns:  41804\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  5  finished - processed in  0:14:34.639810 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  54375\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  0:01:40.881878\n","\n","-14.39575403123718   -13.539396303028415\n","Epoch  6  started at  2020-03-14 07:53:17.365367\n",">> __len__\n","__len__: 1 < 20000  Returns:  40640\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  6  finished - processed in  0:14:26.867194 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  42080\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  0:01:37.763927\n","\n","-15.031834458096945   -14.39575403123718\n","Epoch  7  started at  2020-03-14 08:09:22.178373\n",">> __len__\n","__len__: 1 < 20000  Returns:  39200\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  7  finished - processed in  0:14:28.229580 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  35840\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  0:01:39.088175\n","\n","-15.40747970097518   -15.031834458096945\n","Epoch  8  started at  2020-03-14 08:25:29.684958\n",">> __len__\n","__len__: 1 < 20000  Returns:  54872\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  8  finished - processed in  0:14:27.408392 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  37812\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  0:01:38.314978\n","\n","-15.799902815706803   -15.40747970097518\n","Epoch  9  started at  2020-03-14 08:41:35.577866\n",">> __len__\n","__len__: 1 < 20000  Returns:  47424\n","Checkpoint has been created.\n","Checkpoint has been created.\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  20000 / 20000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n",">>Epoch ends. Post epoch operations:\n","Checkpoint has been created after epoch.\n","batch_cnt:  1293  segment-cnt:  38790\n","Epoch  9  finished - processed in  0:14:26.199730 \n","\n","\n","Validace\n",">> __len__\n","__len__: 1 < 5000  Returns:  38240\n","    loadNextAudio: POZOR: audioindex >= len(self.mixtures)  5000 / 5000 , iterace by mela skoncit a nachystat se nove epocha. (Return None that will rise StopIteration exception.)\n","    __getitem__(): cant return segments: StopIteration raised\n","Validation Finished in  0:01:39.712220\n","\n","-16.044594412717487   -15.799902815706803\n","Finished Training\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"BppHlWLAk2Rz"},"source":["## DEBUG Train network\n"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"ZfuaJ3o2lB0_","colab":{}},"source":["!python3 train.py \\\n","--epochs 5 --X 1 --R 1  \\\n","--basepath=\"/gdrive/My Drive/FIT/dataset/\"         \\\n","--dst-dir=\"/gdrive/My Drive/FIT/DEBUG_training/\"   \\\n","--disable-validation  \\\n","--disable-training    \\\n","--minibatch-size 10  #2>stderr.log"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ESHqmtc5f3Rs","colab_type":"text"},"source":["## Inference - extract Sources from Mixture\n"]},{"cell_type":"code","metadata":{"id":"5wwOaZ09f7Ot","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":176},"outputId":"7fa47dc0-e937-4343-b3c2-8c8f0fa1de64","executionInfo":{"status":"ok","timestamp":1584183820604,"user_tz":-60,"elapsed":6504,"user":{"displayName":"Kyuubi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8iA1SO5WVlbY-r-p7wqCuleXLVpOuYym6tOQ3=s64","userId":"09699004457365288649"}}},"source":["training_dir_name = \"2020-03-03_23:49_X7_R3\"\n","checkpoint = \"2020-03-03_23:49_X7_R3/tasnet_model_checkpoint_2020-03-04_00:53_X7_R3_e0_a15000.tar\"\n","# TODO: nejak nacpat tyto promenne do cest nize:   \"..cesta\" + var + \"cesta..\"\n","# Vysledky chci ulozit do adresare, ze ktereho jsem bral checkpoint.\n","\n","!python3 inference.py --R 3 --X 7 \\\n","--load-checkpoint=\"/gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/tasnet_model_checkpoint_2020-03-14_X7_R3_e9_a38790.tar\" \\\n","--dst-dir=\"/gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/inference/\" \\\n","--basepath=\"/gdrive/My Drive/FIT/test_mixtures/\" \\\n","--input-mixture=\"mix2.wav\"\n","\n","#!python3 inference.py --R 3 --X 7 \\\n","#--load-checkpoint=\"/gdrive/My Drive/FIT/training_results/2020-02-19/tasnet_model_checkpoint_2020-02-19_09:41_X7_R3_e5_a20000.tar\" \\\n","#--dst-dir=\"/gdrive/My Drive/FIT/training_results/2020-02-19/inference/\" \\\n","#--basepath=\"/gdrive/My Drive/FIT/test_mixtures/\" \\\n","#--input-mixture=\"trump-marco-debate.wav-resampled.wav\"\n"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Version 07\n","Namespace(BASE_DATA_PATH='/gdrive/My Drive/FIT/test_mixtures/', DEBUG=False, R=3, X=7, checkpoint_file='/gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/tasnet_model_checkpoint_2020-03-14_X7_R3_e9_a38790.tar', dst_dir='/gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/inference/', epochs=None, input_mixture='mix2.wav', learning_rate=0.0001, minibatch_size=1, padding=10, stride=20)\n","Cuda is available!\n","Nactena epocha:  9  a loss:  tensor(-575.6403, device='cuda:0', requires_grad=True)\n","Prepared for inference, load your audio.\n","/gdrive/My Drive/TasNet/tools.py:101: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n","  tensor_float32 = torch.tensor(tensor, dtype=torch.float32)\n","Inference done, separated speakers saved into /gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/inference/\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"mFEGedlzgTnm","colab_type":"text"},"source":["## Test network - calculate SI-SNR"]},{"cell_type":"code","metadata":{"id":"54BPXSpLgZQg","colab_type":"code","outputId":"762e42dc-359b-4916-db2f-86467b2a3166","executionInfo":{"status":"ok","timestamp":1583671275753,"user_tz":-60,"elapsed":6080119,"user":{"displayName":"Kyuubi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg8iA1SO5WVlbY-r-p7wqCuleXLVpOuYym6tOQ3=s64","userId":"09699004457365288649"}},"colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["training_dir_name = \"2020-03-03_23:49_X7_R3\"\n","checkpoint = \"2020-03-03_23:49_X7_R3/tasnet_model_checkpoint_2020-03-04_00:53_X7_R3_e0_a15000.tar\"\n","# TODO: nejak nacpat tyto promenne do cest nize:   \"..cesta\" + var + \"cesta..\"\n","# Vysledky chci ulozit do adresare, ze ktereho jsem bral checkpoint.\n","\n","!python3 test.py --R 3 --X 7 \\\n","--basepath=\"/gdrive/My Drive/FIT/dataset/\" \\\n","--load-checkpoint=\"/gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/tasnet_model_checkpoint_2020-03-14_X7_R3_e9_a38790.tar\" \\\n","--dst-dir=\"/gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/\" \\\n","--minibatch-size 1\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Version 10\n","Namespace(BASE_DATA_PATH='/gdrive/My Drive/FIT/dataset/', DEBUG=False, R=3, X=7, checkpoint_file='/gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/tasnet_model_checkpoint_2020-03-14_X7_R3_e9_a38790.tar', dst_dir='/gdrive/My Drive/FIT/training_results/2020-03-14_03:31_X7_R3/', learning_rate=0.0001, minibatch_size=1, padding=10, stride=20)\n","Cuda is available!\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"yh0XKV8_KUD_","colab_type":"text"},"source":["# Plot loss graph "]},{"cell_type":"code","metadata":{"id":"UwWKtLabKWe8","colab_type":"code","colab":{}},"source":["import matplotlib.pyplot as plt\n","import csv\n","\n","x = []\n","y = []\n","\n","learning_started_date=\"2019-11-12 01:01\"\n","\n","losspath = BASE_DATA_PATH + \"loss_\"+ learning_started_date + \".log\"\n","with open(losspath,'r') as csvfile:\n","    plots = csv.reader(csvfile, delimiter=',')\n","    for row in plots:\n","        x.append(float(row[0]))\n","        y.append(float(row[1]))\n","\n","plt.plot(x,y, label='Loaded from file!')\n","plt.xlabel('number of processed audio')\n","plt.ylabel('loss')\n","plt.title('Interesting Graph\\nCheck it out')\n","plt.legend()\n","plt.show()"],"execution_count":0,"outputs":[]}]}